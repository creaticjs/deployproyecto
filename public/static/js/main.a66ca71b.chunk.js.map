{"version":3,"sources":["reducers/productosReducer.js","reducers/index.js","actions/types.js","store.js","actions/productosActions.js","components/Producto.jsx","components/Productos.jsx","components/NoRuta.jsx","components/NuevoProducto.jsx","App.js","serviceWorker.js","index.js"],"names":["estadoInicial","productos","combineReducers","state","arguments","length","undefined","action","type","Object","objectSpread","payload","concat","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","urlServer","Producto","producto","this","props","react_default","a","createElement","nombre","Component","Productos","mostrarProductos","_this","className","onClick","history","push","map","index","components_Producto","key","connect","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","respuesta","wrap","_context","prev","next","axios","get","sent","console","log","data","stop","_x","NoRuta","NuevoProducto","precio","changeInput","e","target","value","setState","defineProperty","name","guardarCambios","guardarProducto","then","htmlFor","onChange","_ref2","_callee2","_context2","post","_x2","App","es","react_router_dom","react_router","exact","path","component","React","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a66ca71b.chunk.js","sourcesContent":["import { MOSTRAR_PRODUCTOS, GUARDAR_PRODUCTO } from \"../actions/types\";\n\nconst estadoInicial = {\n  productos: []\n};\nexport default function(state = estadoInicial, action) {\n  switch (action.type) {\n    case MOSTRAR_PRODUCTOS:\n      return { ...state, productos: action.payload };\n      break;\n    case GUARDAR_PRODUCTO:\n      return { ...state, productos: [...state.productos, action.payload] };\n      break;\n    default:\n      return state;\n      break;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport productosReducer from \"./productosReducer\";\n//import ventasReducer from \"./ventasReducer\";\nexport default combineReducers({\n  productos: productosReducer\n});\n","export const MOSTRAR_PRODUCTOS = \"MOSTRAR_PRODUCTOS\";\nexport const MOSTRAR_PRODUCTO = \"MOSTRAR_PRODUCTO\";\nexport const CREAR_PRODUCTO = \"CREAR_PRODUCTO\";\nexport const ELIMINAR_PRODUCTO = \"ELIMINAR_PRODUCTO\";\nexport const GUARDAR_PRODUCTO = \"GUARDAR_PRODUCTO\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\nimport rootReducer from \"./reducers\";\n\nconst estadoInicial = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  estadoInicial,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","import { MOSTRAR_PRODUCTOS, GUARDAR_PRODUCTO } from \"./types\";\n\n//axios\nimport axios from \"axios\";\n\n//\nconst urlServer = \"https://my-json-server.typicode.com/jeisonsrz/ReactNetlify\";\nexport const mostrarProductos = () => async dispatch => {\n  const respuesta = await axios.get(urlServer + \"/productos\");\n  console.log(respuesta);\n\n  dispatch({\n    type: MOSTRAR_PRODUCTOS,\n    payload: respuesta.data\n  });\n  //return { type: MOSTRAR_PRODUCTOS };\n};\n\nexport const guardarProducto = producto => async dispatch => {\n  const respuesta = await axios.post(urlServer + \"/productos\", producto);\n  console.log(respuesta);\n\n  dispatch({\n    type: GUARDAR_PRODUCTO,\n    payload: respuesta.data\n  });\n  //return { type: MOSTRAR_PRODUCTOS };\n};\n","import React, { Component } from \"react\";\n\nclass Producto extends Component {\n  render() {\n    const { producto } = this.props;\n    return (\n      <li>\n        <p>{producto.nombre}</p>\n      </li>\n    );\n  }\n}\n\nexport default Producto;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { mostrarProductos } from \"../actions/productosActions\";\nimport Producto from \"./Producto\";\nclass Productos extends Component {\n  componentDidMount() {\n    this.props.mostrarProductos();\n  }\n  render() {\n    const { productos } = this.props;\n    return (\n      <div className=\"container\">\n        <button\n          onClick={() => {\n            this.props.history.push(\"/productos/nuevo\");\n          }}\n          className=\"btn btn-success\"\n        >\n          Nuevo producto\n        </button>\n        <h1>Listado de productos</h1>\n        {productos.map((producto, index) => {\n          return <Producto key={index} producto={producto} />;\n        })}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProp = state => {\n  return {\n    productos: state.productos.productos\n  };\n};\n\nexport default connect(\n  mapStateToProp,\n  { mostrarProductos }\n)(Productos);\n","import React, { Component } from \"react\";\n\nclass NoRuta extends Component {\n  render() {\n    return (\n      <div>\n        <h3>Estas perdido tio!!ðŸ¤®</h3>\n      </div>\n    );\n  }\n}\n\nexport default NoRuta;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { guardarProducto } from \"../actions/productosActions\";\nclass NuevoProducto extends Component {\n  state = { nombre: \"\", precio: 0 };\n\n  changeInput = e => {\n    console.log(e.target.value);\n\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  guardarCambios = () => {\n    //Guardar el producto\n    console.log(\"guardando el producto\");\n    this.props.guardarProducto(this.state).then(() => {\n      this.props.history.push(\"/\");\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h2>Agregar Producto</h2>\n        <div>\n          <label htmlFor=\"\">Nombre</label>\n          <input onChange={this.changeInput} name=\"nombre\" type=\"text\" />\n        </div>\n        <div>\n          <label htmlFor=\"\">Precio</label>\n          <input onChange={this.changeInput} name=\"precio\" type=\"text\" />\n        </div>\n        <div>\n          <button onClick={this.guardarCambios} className=\"btn btn-success\">\n            ðŸ”’Guardar\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { guardarProducto }\n)(NuevoProducto);\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport Productos from \"./components/Productos\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport NoRuta from \"./components/NoRuta\";\nimport NuevoProducto from \"./components/NuevoProducto\";\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <h1>Bienvenidos a la clase de Redux</h1>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Productos} />\n            <Route exact path=\"/productos/nuevo\" component={NuevoProducto} />\n            <Route component={NoRuta} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}